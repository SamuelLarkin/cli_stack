version: "3"

env:
  BIN_DIR: "{{.HOME}}/.local/bin"
  # NOTE: [Environment variable used by cargo to specify the installation directory](https://doc.rust-lang.org/cargo/commands/cargo-install.html)
  CARGO_INSTALL_ROOT: "{{.HOME}}/.local"

tasks:
  default:
    desc: >
      Install all essential rust tools
    deps:
      - bat
      - delta
      - difftastic
      - hexyl
      - hyperfine
      - lsd
      - reservoir_sampling
      - starship
      - stybulate
      - zoxide

  bat:
    desc: >
      A cat(1) clone with syntax highlighting and Git integration.
    summary: |
      A cat(1) clone with syntax highlighting and Git integration.

      [bat](https://github.com/sharkdp/bat)
    cmd: cargo install --force bat
    generates:
      - "{{.BIN_DIR}}/bat"
    status:
      - which bat
    preconditions:
      - msg: "cargo must be in your $PATH"
        sh: which cargo

  delta:
    desc: >
      A syntax-highlighting pager for git, diff, and grep output
    summary: |
      A syntax-highlighting pager for git, diff, and grep output

      [delta](https://github.com/dandavison/delta)

      ~/.gitconfig

      [core]
          pager = delta

      [interactive]
          diffFilter = delta --color-only

      [delta]
          navigate = true  # use n and N to move between diff sections

      [merge]
          conflictstyle = diff3

      [diff]
          colorMoved = default
    cmd: cargo install --force --git https://github.com/dandavison/delta
    generates:
      - "{{.BIN_DIR}}/delta"
    status:
      - which delta
    preconditions:
      - msg: "cargo must be in your $PATH"
        sh: which cargo

  difftastic:
    desc: >
      Difftastic is an experimental diff tool that compares files based on their
      syntax.
    summary: |
      Difftastic is an experimental diff tool that compares files based on their
      syntax.

      [difftastic](https://github.com/Wilfred/difftastic)
    cmd: cargo install --force difftastic
    generates:
      - "{{.BIN_DIR}}/difft"
    status:
      - which difft
    preconditions:
      - msg: "cargo must be in your $PATH"
        sh: which cargo

  hexyl:
    desc: >
      is a simple hex viewer for the terminal. It uses a colored output to
      distinguish different categories of bytes (NULL bytes, printable ASCII
      characters, ASCII whitespace characters, other ASCII characters and
      non-ASCII).
    summary: |
      hexyl is a simple hex viewer for the terminal. It uses a colored output to
      distinguish different categories of bytes (NULL bytes, printable ASCII
      characters, ASCII whitespace characters, other ASCII characters and
      non-ASCII).

      [hexyl](https://github.com/sharkdp/hexyl)
    cmd: cargo install --force hexyl
    generates:
      - "{{.BIN_DIR}}/hexyl"
    status:
      - which hexyl
    preconditions:
      - msg: "cargo must be in your $PATH"
        sh: which cargo

  hyperfine:
    desc: >
      A command-line benchmarking tool.
    summary: |
      A command-line benchmarking tool.

      [hyperfine](https://github.com/sharkdp/hyperfine)
    cmd: cargo install --force hyperfine
    generates:
      - "{{.BIN_DIR}}/hyperfine"
    status:
      - which hyperfine
    preconditions:
      - msg: "cargo must be in your $PATH"
        sh: which cargo

  lsd:
    desc: >
      This project is a rewrite of GNU ls with lot of added features like
      colors, icons, tree-view, more formatting options etc. The project is
      heavily inspired by the super colorls project.
    summary: |
      This project is a rewrite of GNU ls with lot of added features like
      colors, icons, tree-view, more formatting options etc. The project is
      heavily inspired by the super colorls project.

      [lsd (LSDeluxe)](https://github.com/Peltoche/lsd)
    cmd: cargo install --force --locked lsd
    generates:
      - "{{.BIN_DIR}}/lsd"
    status:
      - which lsd
    preconditions:
      - msg: "cargo must be in your $PATH"
        sh: which cargo

  # NOTE we manually move the compile binary because we want to make sure it
  # is different than the other variants of reservoir_sampling.
  # NOTE that we move the binary because it will conflict with the one in ~/.cargo/bin.
  reservoir_sampling:
    desc: >
      Reservoir Sampling in Rust.
    summary: |
      Reservoir Sampling in Rust.

      [reservoir_sampling](https://github.com/SamuelLarkin/reservoir_sampling.rs)
    cmds:
      - cargo install --force --git https://github.com/SamuelLarkin/reservoir_sampling_rs
    generates:
      - "{{.BIN_DIR}}/reservoir_sampling_rs"
    status:
      - which reservoir_sampling_rs
    preconditions:
      - msg: "cargo must be in your $PATH"
        sh: which cargo

  starship:
    desc: >
      ☄🌌️ The minimal, blazing-fast, and infinitely customizable prompt for any
      shell!
    summary: |
      ☄🌌️ The minimal, blazing-fast, and infinitely customizable prompt for any
      shell!

      [starship](https://github.com/starship/starship)

      eval "$(starship init bash)"
    cmd: cargo install --force starship
    generates:
      - "{{.BIN_DIR}}/starship"
    status:
      - which starship
    preconditions:
      - msg: "cmake must be in your $PATH"
        sh: which cmake

  stybulate:
    desc: >
      Tabulate with Style
    summary: |
      Tabulate with Style

      [stybulate](https://github.com/guigui64/stybulate)
    cmd: cargo install --force stybulate --features=cli
    generates:
      - "{{.BIN_DIR}}/stybulate"
    status:
      - which stybulate
    preconditions:
      - msg: "cargo must be in your $PATH"
        sh: which cargo

  zoxide:
    desc: >
      zoxide is a smarter cd command, inspired by z and autojump.
      It remembers which directories you use most frequently, so you can "jump"
      to them in just a few keystrokes.  zoxide works on all major shells.
    summary: |
      zoxide is a smarter cd command, inspired by z and autojump.
      It remembers which directories you use most frequently, so you can "jump"
      to them in just a few keystrokes.  zoxide works on all major shells.

      [zoxide](https://github.com/ajeetdsouza/zoxide)

      `eval "$(zoxide init bash)"`
    cmd: cargo install --force zoxide
    generates:
      - "{{.BIN_DIR}}/zoxide"
    status:
      - which zoxide
    preconditions:
      - msg: "cargo must be in your $PATH"
        sh: which cargo
